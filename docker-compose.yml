version: "3.8"

services:

  surrealdb:
    image: surrealdb/surrealdb:v1.5.2
    ports:
      - '8000:8000'
    user: "root"
    command: start --auth --user root --pass root file:/surrealdb/inventory.db
    environment:
      - SURREALDB_ENV_USER=root
      - SURREALDB_ENV_PASS=root
    volumes:
      - surrealdb-data:/surrealdb


  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - "zookeeper-data:/var/lib/zookeeper/data"
      - "zookeeper-log:/var/lib/zookeeper/log"


  kafka:
    image: 'bitnami/kafka:3.2.3'
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CREATE_TOPICS: stock_update:1:3
    volumes:
      - "kafka-data:/var/lib/kafka/data"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5    
  
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8888:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
    depends_on:
      - kafka

volumes:
  surrealdb-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data: